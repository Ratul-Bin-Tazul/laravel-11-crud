name: Run Tests

on:
  workflow_dispatch:
    inputs:
      test_run_id:
        description: 'Test Run ID'
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, xml
        coverage: xdebug
        
    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
        
    - name: Install Dependencies
      run: composer install --prefer-dist --no-interaction --no-progress
      
    - name: Prepare Laravel Application
      run: |
        cp .env.example .env
        php artisan key:generate
        
    - name: Run Tests with Coverage
      run: XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover=coverage.xml
      
    - name: Generate Test Results JSON
      id: test-results
      run: |
        # Extract test counts and coverage from PHPUnit output
        TOTAL_TESTS=$(grep -o 'Tests: [0-9]*' phpunit.xml.bak 2>/dev/null || echo "Tests: 0" | awk '{print $2}')
        FAILURES=$(grep -o 'Failures: [0-9]*' phpunit.xml.bak 2>/dev/null || echo "Failures: 0" | awk '{print $2}')
        SKIPPED=$(grep -o 'Skipped: [0-9]*' phpunit.xml.bak 2>/dev/null || echo "Skipped: 0" | awk '{print $2}')
        PASSED=$((TOTAL_TESTS - FAILURES - SKIPPED))
        
        # Extract coverage percentage
        COVERAGE=$(grep -o 'Lines: [0-9]*\.[0-9]*%' coverage.xml 2>/dev/null || echo "Lines: 0.0%" | awk '{print $2}' | tr -d '%')
        
        # Create results JSON
        cat > test-results.json << EOF
        {
          "status": "completed",
          "completed_at": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
          "results": {
            "coverage_percentage": $COVERAGE,
            "total_tests": $TOTAL_TESTS,
            "passed_tests": $PASSED,
            "failed_tests": $FAILURES,
            "skipped_tests": $SKIPPED
          }
        }
        EOF
        
        cat test-results.json
        
    - name: Send Results to Webhook
      run: |
        curl -X POST \
          -H "Content-Type: application/json" \
          -d @test-results.json \
          https://githubworkflow.requestcatcher.com/?test_run_id=${{ github.event.inputs.test_run_id }}
